# services:
#   web:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile

#     ports:
#       - "3000:3000"
#     depends_on:
#       - api
#     networks:
#       - app-network     

#   api:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     environment:
#       MYSQL_HOST: db
#       REDIS_HOST: cache
#     ports:
#       - "5000:5000"
#     depends_on:
#       - db
#       - cache
#     networks:
#       - app-network    

#   db:
#     image: mysql:8
#     environment:
#       MYSQL_ROOT_PASSWORD: rootpassword
#       MYSQL_DATABASE: productdb
#     volumes:
#       - mysql-data:/var/lib/mysql
#     networks:
#       - app-network    

#   cache:
#     image: redis:alpine
#     ports:
#       - "6380:6379"
#     networks:
#       - app-network    

# volumes:
#   mysql-data:

# networks:
#   app-network:
#     driver: bridge  

version: '3.8'

services:
  backend:
    build: ./backend
    image: bhavneetsingh01/advanced-web-service:latest 
    ports:
      - "5000:5000"
    environment:
      - MYSQL_HOST=db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpassword
      - MYSQL_DATABASE=productdb
      - REDIS_HOST=cache
      - REDIS_PORT=6379
    depends_on:
      - db
      - cache
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    networks:
      - app-network

  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: productdb
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network

  cache:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network
volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge
